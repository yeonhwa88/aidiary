인터페이스란 ? :
작업명세서 (작업지시서) 
실제 구현된 것이 전혀 없는 기본 설계도.
객체를 생성할 수 없고, 클래스 작성에 도움을 줄 목적으로 사용.
미리 정해진 규칙에 맞게 구현하도록 표준을 제시.
추상메서드와 상수 만을 멤버로 가질수 있다.
인터페이스의 문법 :
class 대신 interface 예약어 사용한다는 점에서 클래스와 유사.
실제 구현된 기능 없이 추상메소드와 상수만이 존재
상수나 메소드를 만들 때 접근 제한자 private은 사용 불가.
인터페이스는 객체 생성이 불가하며 변수 타입으로는 사용이 가능.
구현은 lmplement 클래스에서 가능.
인터페이스의 장점 :
개발시간의 단축. 표준화 가능. 독립적인 프로그래밍 가능.
다형성이란? :
객체가 다양하게 변할 수 있다.
하나의 인터페이스를 사용하여 다양한 구현 방법 제공. 하나의 클래스나 함수가 다양하게 동작하는 것.
메소드 overriding : 부모클래스와 자식클래스에 동일한 메소드 존재 상속받은 메서드의 내용을 변경하는것 .
oberriding 조건 : 
선언부가 같아야 한다. (이름, 매개변수, 리턴타입)
접근제어자를 좁은 범위를 변경할 수 없다.
부모클래스 메서드가 protected라면 범위가 같거나 넓은 protected나 public 으로만 가능하다.
