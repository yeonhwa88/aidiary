상속이란 ? :
기존의 클래스를 재사용해서 새로운 클래스를 만드는것.
두 클래스의 부모와 자식으로 관계를 맺어 데이터(속성) 메소드(기능)을 상속 받을수 있다.
자식은 부모의 멤버를 상속 받으나 private멤버는 직접 제어 불가.
다중 상속이 지원되지 않는다.
다양한 객체(타입)을 상속을 통해서 하나의 객체로 묶을수 있다.
Object 클래스 :
조상이 없는 클래스는 자동적으로 Object 클래스를 상속받게 된다.
상속계층도의 최상위에는 Object클래스가 위치한다.
모든 클래스는 Object클래스에 정의된 11개의 메서드를 상속받는다.
상속받은 객체는 상속해 준 객체의 데이터 및 메소드를 이용할 수 있고 또는 변경할 수도 있다.
상속 문법의 이해 :
접근제어자 [final/abstract] class 클래스이름 extends 상위클래스(super class) {
	추가할 멤버변수선언;
	생성자;
	추가할 메소드선언;
}
오버라이드(override) :
부모 클래스의 메소드를 자식 클래스에서 재정의. 
자식 클래스가 부모클래스를 상속하여 자식클래스에서 동일한 이름으로 다시 재정의.
super키워드란 ? :
하위 클래스에 의해 가려진 상위클래스의 멤버변수나 메소드에 접근할 때 사용.
super.객체변수
super.메소드이름(매개변수)
자식 클래스에서 보모클래스의 메소드를 사용하고자 할 때 super키워드를 사용.
final : 상수
final로 선언된 인자는 메소드 내에서 변경이 불가.
클래스명에 final을 붙이면 다른 클래스가 상속 불가.
final class 클래스명 {} - > 상속불가
final void 메서드명(){} -> 오버라이딩 금지