<<<<<<< HEAD
인터페이스란? 
작업명세서(작업지시서) - 객체의 다형성 구현 
인터페이스는 클래스가 구현해야 할 메서드의 목록을 정의하는 일종의 작업지시서이다. 
인터페이스 자체는 구현을 포함하지 않으며, 오직 메서드 선언만 가진다.
interface 키워드: 
인터페이스를 정의할 때 interface 키워드를 사용한다.
추상 메서드: 
인터페이스의 모든 메서드는 암묵적으로 추상적이며, 자식 클래스(구현 클래스)에서 구현해야 한다. 
다중 구현 가능: 
자바 클래스는 다중 상속을 지원하지 않지만, 여러 인터페이스를 구현할 수 있다. 즉, 하나의 클래스가 여러 인터페이스를 구현함으로써 다양한 기능을 제공할 수 있다.
implements 키워드: 
클래스가 인터페이스를 구현할 때 implements 키워드를 사용하며, 인터페이스에 정의된 모든 추상 메서드를 구현해야 한다.
변수 선언: 
인터페이스에서 선언된 변수는 public, static, final이며, 상수로 간주된다.
상속과 차이점: 
클래스 상속은 구현 상속이라면, 인터페이스는 구현의 약속을 강제하는 구조다. 클래스는 단일 상속만 가능하지만, 인터페이스는 다중 구현이 가능하다.
사용 목적: 
인터페이스는 다양한 클래스들이 공통된 동작을 갖도록 하고, 서로 다른 클래스들이 동일한 방식으로 상호작용하도록 설계할 때 사용된다.
유지보수의 유연성: 
인터페이스는 코드의 결합도를 낮추고, 다양한 클래스들이 동일한 방식으로 행동하도록 강제하여 유지보수성과 확장성을 높인다.
>>>>>>> 8f4478f802d5bfd6a9aa4f2ddb8668403598980e
