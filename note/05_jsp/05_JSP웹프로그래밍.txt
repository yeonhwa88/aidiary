JSP 웹프로그래밍 :
JSP 내부 객체
  - 개발자가 객체를 생성하지 않고 바로 사용할 수 있는 객체가 내부객체.
  - JSP에서 제공되는 내부객체는 JSP컴터이너에 의해 Servlet으로 변화될 때 자동으로 객체가 생성
  - 대표적인 내부 객체
      - request , response, out
JSP 태그의 개념 이해 
  - Servlet은 JAVA언어를 이용하여 문서를 작성하고, 출력객체(printWriter객체)를 이용하여 HTML코드를 삽입한다
  - JSP는 Servlet과 반대로 HTML코드에 JAVA언어를 삽입하여 동적 문서를 만들수 있다
  - HTML코드안에 JAVA코드를 삽입할수 있는 코드
      - 지시자 <%@ %> : 페이지 속성 ex.import, page
      - 주석 <%-- --%>
      - 선언 <%! %> :  전역변수 및 메소드 선언
      - 표현식 <%= %> : 결과값 출력 (tag영역에서 사용)
      - 스크립트릿 <% %> : JAVA 코드
      - 액션태그 : <jsp.action> </jsp.action> : 표준액션태그 ex.파일연결 및 자바빈 연결
	        : <c:set> </c:set> : 커스텀액션태그
JSP 내부 객체
  - request 객체 : 웹브라우저를 통해 서버에 어떤 정보를 요청하는 것을 request라 하며, 이러한 요청 정보는 request 내부객체가 관리한다
  - request 객체 매소드
      - 객체 타입 : javax.servlet.http.HttpServletRequest
<<<<<<< HEAD
  - getRemoteAdd() : 웹서버에 연결할 클라이언트 IP주소
  - request.getContextPath() : contextPath를 리턴
  - getParameter(String name) : name에 해당하는 파라미터 값을 구함
  - getContextPath : 웹 어플리케이션의 컨텍스트 패스를 얻는다
  - getMethod() : get방식과 post방식을 구분
  - getRequestURL() : 요청 url을 얻는다
response 객체 : 웹브라우저의 요청에 응답하는 것을 response한다고 하며 이러한 응답의 정보는 reponse내부 객체가 갖고있다 
  객체타입 : javax.servlet.httpServlertResponse
      - sendRedirect(URL): 지정한 URL로 이동
선언(declaration) : <%! java 코드 기술 %> 변수 또는 메소드를 선언할 때 사용 여기서 선언된 변수 및 메소드는 페이지 어느곳에서나 사용가능한 전역의 의미로 사용
표현식(expression : <%= java 코드 기술 %> JSP페이지 내에서 사용되는 변수의 값 또는 메소드 호출 결과값을 출력하기 위해 사용 ;를 사용하지 않는다 
지시자: JSP페이지의 전체적인 속성을 지정할 때 사용. page, include, taglib가 있으며 , <%@ 속성 %>형태
  - page : 해당 페이지의 전체적인 속성 지정. 주로 사용되는 언어 지정 및 import문을 많이 사용. 문서 타입 (html, excel..)
  - include : 별도의 페이지를 현제 페이지에 사용 (footer 등 모든 페이지에서 반복 사용되는 적업들에 이용)
  - taglib : 태그라이브러리(사용자가 만든 tag들)의 태그 사용. 태그라이브러리를 사용하기 위해 taglib지시자 사용.
  - 주석 : 실제 프로그램에는 영향이 없고 프로그램 설명들의 목적으로 사용되는 태그
      - <!-- HTML 주석--> , <%-- JSP 주석 --> //자바주석 /* 자바여러줄 주석 */
JSP 동작 원리 : 클라이언트가 웹브라우저로 a.jsp를 요청하게 되면 JSP컨테이너가 JSP파일을 Servlet파일(a_jsp.java)로 변환된다.
그리고 Servlet파일(.java)은 컴파일 된 후 클레스 파일(.class)로 변환되고 요청한 클라이언트 한테 html파일 형태로 응답
  = [웹 브라우저 요청] → [a.jsp 를 a_ jsp.java로 변환] → [a_ jsp.java를 a_ jsp.class로 변환] → [웹브라우저에 HTML 형태로 응답]
=======
  - getRemoteAdd() : 웹서버에 연결할 클라이언트 IP주소
>>>>>>> c298ebf3f52b33e4f96d7768f87a7a35490fa83d
