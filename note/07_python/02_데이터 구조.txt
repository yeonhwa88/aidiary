리스트 : [ ]를 이용하여 만들며, 여러개 값을 하나의 변수에 저장/관리, 슬라이싱[from:to:by] 이용하여 데이터 셋 추출
  sort() : 오름차순 정렬
  reverse() : 역순으로 변경 정렬 / sort(reverse=True) : 내림차순 정렬
  append() : 요소 맨 뒤에 추가
  extend() : 리스트를 요소별로 맨 뒤에 각기 추가
  insert(idx, 값) : idx번째 인덱스 위치에 값 추가
튜플 : ( )를 이용하여 만들며, 읽기전용, 수정이 필요없는 데이터 사용, 수정, 추가, 삭제 불가
딕셔너리 : { }를 이용하여 만들며, key가 유일한 값, key값에 list는 사용불가 tuple은 가능.
셋 : { }를 이용하여 만들거나 set() 함수로 생성, 중복을 허용하지 않는 집합 
  add() : 요소 하나 추가
  update() : 요소들을 하나씩 따로 추가, 딕셔너리는 key값만 적용
  keys() : 키 목록 / .values() : 값들 목록 / .items() : 키 값의 목록
pop() : 가장 마지막 인덱스 요소 반환 후 삭제
remove(data) : list 안의 data 삭제 반환 없음
del 변수[idx] : idx번째 요소가 삭제 반환 없음
copy() : 깊은 복사 (주소값을 다르게 만들어 원본 리스트를 훼손하지않는 방법)
enumerate : 순서 객체로 반복문을 처리할 때 사용하는 함수 (리스트, 튜플, 셋)을 for문에 사용시